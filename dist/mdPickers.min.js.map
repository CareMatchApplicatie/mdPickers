{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$rootScope","$scope","$mdDialog","time","autoSwitch","$mdMedia","mdPanelRef","$window","self","this","_mdPanelRef","VIEW_HOURS","VIEW_MINUTES","currentView","moment","onWindowResize","angular","element","off","cancel","on","$on","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","cleanUpTrackedPanels","panelRef","_$mdPanel","_trackedPanels","mdpTimePicker","_self","close","then","config","openFrom","currentTarget","focus","e","console","log","destroy","confirm","_time","locals","onClose","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","i","push","j","DatePickerCtrl","$mdPanel","$timeout","currentDate","options","date","minDate","isValid","maxDate","displayFormat","dateFilter","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","mdpDatePicker","animating","noop","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","value","enabled","isDayEnabled","selectDate","dom","selectDateDblClick","doubleClick","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","module","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","factory","$mdpLocale","minTime","maxTime","minuteStepping","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","ampm","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","inputContainer","getClosest","toggleClass","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","$parent","timepicker","onEvent","event","containerCoords","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","_mdPanel","timePicker","cb","trackedPanels","removePanel","openPanel","open","sameInitiator","event1","event2","previousParent","parentElement","currentParent","Date","now","isObject","position","newPanelPosition","relativeTo","targetEvent","addPanelPosition","xPosition","CENTER","yPosition","BELOW","ALIGN_START","ALIGN_END","OFFSET_START","OFFSET_END","ABOVE","panelAnimation","newPanelAnimation","closeTo","withAnimation","animation","SCALE","attachTo","document","body","skipHide","clickOutsideToClose","escapeToClose","focusOnOpen","trapFocus","zIndex","$mdpTimePicker","require","transclude","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","mdpOpenOnClick","mdpDisabled","disabled","ngModel","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","querySelector","clone","append","$error","setInvalid","Object","keys","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","find","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","pre","post","updateDate","model","isError","$invalid","month"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n    \"ngMaterial\",\r\n    \"ngAnimate\",\r\n    \"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n        $mdIconProvider.icon(icon.id, icon.url);\r\n    });\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n        $templateCache.put(icon.url, icon.svg);\r\n    });\r\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-access-time',\r\n        url: 'mdp-access-time.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-event',\r\n        url: 'mdp-event.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\n/**\r\n * Created by Robin Thoni on 6/21/17.\r\n */\r\n\r\nmodule.factory('$mdpLocale', [function () {\r\n    var $mdpLocale = {\r\n        time: {\r\n            minTime: null,\r\n            maxTime: null,\r\n            minuteStepping: 1,\r\n            okLabel: \"OK\",\r\n            cancelLabel: \"Cancel\",\r\n            timeFormat: \"HH:mm\",\r\n            noFloat: false,\r\n            openOnClick: false,\r\n            autoSwitch: false,\r\n            ampm: true,\r\n            clearOnCancel: false\r\n        },\r\n        date: {\r\n            minDate: null,\r\n            maxDate: null,\r\n            okLabel: \"OK\",\r\n            cancelLabel: \"Cancel\",\r\n            dateFilter: null,\r\n            dateFormat: \"YYYY-MM-DD\",\r\n            displayFormat: \"ddd, MMM DD\",\r\n            noFloat: false,\r\n            openOnClick: false,\r\n            clearOnCancel: false\r\n        }\r\n    };\r\n\r\n    return $mdpLocale;\r\n}]);\r\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\r\n   return {\r\n        restrict: \"EA\",\r\n        priority: 101,\r\n        compile: function(element) {\r\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\r\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\r\n\r\n            // If we are not a child of an input container, don't do anything\r\n            if (!inputContainer) return;\r\n\r\n            // Add our animation class\r\n            element.toggleClass('md-input-message-animation', true);\r\n\r\n            return {};\r\n        }\r\n    };\r\n\r\n}]);\n/* global moment, angular */\r\n\r\nfunction TimePickerCtrl($rootScope, $scope, $mdDialog, time, autoSwitch, $mdMedia, mdPanelRef, $window) {\r\n    var self = this;\r\n\r\n    this._mdPanelRef = mdPanelRef;\r\n    this.VIEW_HOURS = 1;\r\n    this.VIEW_MINUTES = 2;\r\n    this.currentView = this.VIEW_HOURS;\r\n    this.time = moment(time);\r\n    this.autoSwitch = !!autoSwitch;\r\n\r\n    this.onWindowResize = function () {\r\n        angular.element($window).off('resize', this.onWindowResize);\r\n        self.cancel();\r\n    };\r\n\r\n    angular.element($window).on('resize', this.onWindowResize);\r\n\r\n    $rootScope.$on('$stateChangeStart', function () {\r\n        self.cancel();\r\n    });\r\n\r\n    $rootScope.$on('$locationChangeSuccess', function () {\r\n        self.cancel();\r\n    });\r\n\r\n\r\n    this.clockHours = parseInt(this.time.format(\"h\"));\r\n    this.clockMinutes = parseInt(this.time.minutes());\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n\r\n    this.switchView = function () {\r\n        self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\r\n    };\r\n\r\n    this.setAM = function () {\r\n        if (self.time.hours() >= 12)\r\n            self.time.hour(self.time.hour() - 12);\r\n    };\r\n\r\n    this.setPM = function () {\r\n        if (self.time.hours() < 12)\r\n            self.time.hour(self.time.hour() + 12);\r\n    };\r\n\r\n    this.cleanUpTrackedPanels = function (panelRef) {\r\n        if (panelRef._$mdPanel._trackedPanels.mdpTimePicker) {\r\n            delete panelRef._$mdPanel._trackedPanels.mdpTimePicker;\r\n        }\r\n    };\r\n\r\n    this.cancel = function () {\r\n        var panelRef = this._mdPanelRef,\r\n            _self = this;\r\n\r\n        panelRef && panelRef.close().then(function () {\r\n            try {\r\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\r\n                _self.cleanUpTrackedPanels(panelRef);\r\n            } catch (e) {\r\n                console.log('Reference not found ' + e);\r\n            } finally {\r\n                panelRef.destroy();\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    this.confirm = function () {\r\n        var _time = self.time,\r\n            panelRef = self._mdPanelRef;\r\n\r\n        panelRef && panelRef.close().then(function () {\r\n            try {\r\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\r\n                panelRef.config.locals.onClose(_time.toDate());\r\n                self.cleanUpTrackedPanels(panelRef);\r\n            } catch (e) {\r\n                console.log('No close function found.');\r\n            } finally {\r\n\r\n                panelRef.destroy();\r\n            }\r\n\r\n        });\r\n    };\r\n}\r\n\r\nfunction ClockCtrl($scope) {\r\n    var TYPE_HOURS = \"hours\";\r\n    var TYPE_MINUTES = \"minutes\";\r\n    var self = this;\r\n\r\n    this.STEP_DEG = 360 / 12;\r\n    this.steps = [];\r\n\r\n    this.CLOCK_TYPES = {\r\n        \"hours\": {\r\n            range: 12,\r\n        },\r\n        \"minutes\": {\r\n            range: 60,\r\n        }\r\n    };\r\n\r\n    this.getPointerStyle = function () {\r\n        var divider = 1;\r\n        switch (self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }\r\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n        return {\r\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n        };\r\n    };\r\n\r\n    this.setTimeByDeg = function (deg) {\r\n        deg = deg >= 360 ? 0 : deg;\r\n        var divider = 0;\r\n        switch (self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }\r\n\r\n        self.setTime(\r\n            Math.round(divider / 360 * deg)\r\n        );\r\n    };\r\n\r\n    this.setTime = function (time, type) {\r\n        this.selected = time;\r\n\r\n        switch (self.type) {\r\n            case TYPE_HOURS:\r\n                if (self.time.format(\"A\") == \"PM\") time += 12;\r\n                this.time.hours(time);\r\n                break;\r\n            case TYPE_MINUTES:\r\n                if (time > 59) time -= 60;\r\n                this.time.minutes(time);\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    this.init = function () {\r\n        self.type = self.type || \"hours\";\r\n        switch (self.type) {\r\n            case TYPE_HOURS:\r\n                for (var i = 1; i <= 12; i++)\r\n                    self.steps.push(i);\r\n                self.selected = self.time.hours() || 0;\r\n                if (self.selected > 12) self.selected -= 12;\r\n\r\n                break;\r\n            case TYPE_MINUTES:\r\n                for (var j = 5; j <= 55; j += 5)\r\n                    self.steps.push(j);\r\n                self.steps.push(0);\r\n                self.selected = self.time.minutes() || 0;\r\n\r\n                break;\r\n        }\r\n    };\r\n\r\n    this.init();\r\n}\r\n\r\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function ($animate, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            'type': '@?',\r\n            'time': '=',\r\n            'autoSwitch': '=?'\r\n        },\r\n        replace: true,\r\n        template: '<div class=\"mdp-clock\">' +\r\n            '<div class=\"mdp-clock-container\">' +\r\n            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\r\n            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\r\n            '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\r\n            '</md-toolbar>' +\r\n            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\r\n            '</div>' +\r\n            '</div>',\r\n        controller: [\"$scope\", ClockCtrl],\r\n        controllerAs: \"clock\",\r\n        link: function (scope, element, attrs, ctrl) {\r\n            var timepickerCtrl = scope.$parent.timepicker;\r\n\r\n            var onEvent = function (event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $timeout(function () {\r\n                    ctrl.setTimeByDeg(deg + 180);\r\n                    if (ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\r\n                });\r\n            };\r\n\r\n            element.on(\"mousedown\", function () {\r\n                element.on(\"mousemove\", onEvent);\r\n            });\r\n\r\n            element.on(\"mouseup\", function (e) {\r\n                element.off(\"mousemove\");\r\n            });\r\n\r\n            element.on(\"click\", onEvent);\r\n            scope.$on(\"$destroy\", function () {\r\n                element.off(\"click\", onEvent);\r\n                element.off(\"mousemove\", onEvent);\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nmodule.provider(\"$mdpTimePicker\", function () {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\";\r\n\r\n    this.setOKButtonLabel = function (label) {\r\n        LABEL_OK = label;\r\n    };\r\n\r\n    this.setCancelButtonLabel = function (label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n\r\n    this.$get = [\"$mdPanel\", function ($mdPanel) {\r\n\r\n        var _mdPanel = $mdPanel,\r\n\r\n            timePicker = function (time, options, cb) {\r\n                var trackedPanels = $mdPanel._trackedPanels,\r\n                    removePanel = function () {\r\n                        trackedPanels.mdpTimePicker.destroy();\r\n                        delete trackedPanels.mdpTimePicker;\r\n                        return;\r\n                    },\r\n                    openPanel = function () {\r\n                        _mdPanel.open(config);\r\n                    },\r\n                    sameInitiator = function (event1, event2) {\r\n                        var previousParent = event1.currentTarget.parentElement,\r\n                            currentParent = event2.currentTarget.parentElement;\r\n\r\n                        return previousParent == currentParent;\r\n                    };\r\n\r\n                if (!angular.isDate(time)) time = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                var position = _mdPanel.newPanelPosition()\r\n                    .relativeTo(options.targetEvent.currentTarget)\r\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.BELOW)\r\n\r\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.ABOVE),\r\n\r\n                    panelAnimation = $mdPanel.newPanelAnimation()\r\n                    .openFrom(options.targetEvent.currentTarget)\r\n                    .closeTo(options.targetEvent.currentTarget)\r\n                    .withAnimation($mdPanel.animation.SCALE),\r\n\r\n                    config = {\r\n                        id: 'mdpTimePicker',\r\n                        attachTo: angular.element(document.body),\r\n                        controller: ['$rootScope', '$scope', '$mdPanel', 'time', 'autoSwitch', '$mdMedia', 'mdPanelRef', '$window', TimePickerCtrl],\r\n                        controllerAs: 'timepicker',\r\n                        template: '<md-card aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<div layout-gt-xs=\"row\" layout-wrap>' +\r\n                            '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\r\n                            '<div class=\"mdp-timepicker-selected-time\">' +\r\n                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' +\r\n                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\r\n                            '</div>' +\r\n                            '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' +\r\n                            '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\r\n                            '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\r\n                            '</div>' +\r\n                            '</md-toolbar>' +\r\n                            '<div>' +\r\n                            '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\r\n                            '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\r\n                            '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\r\n                            '</div>' +\r\n\r\n                            '<md-dialog-actions layout=\"row\">' +\r\n                            '<span flex></span>' +\r\n                            '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                            '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                            '</md-dialog-actions>' +\r\n                            '</div>' +\r\n                            '</div>' +\r\n                            '</md-card>',\r\n                        openFrom: options.targetEvent,\r\n                        position: position,\r\n                        animation: panelAnimation,\r\n                        locals: {\r\n                            time: time,\r\n                            autoSwitch: options.autoSwitch,\r\n                            onClose: cb\r\n                        },\r\n                        skipHide: true,\r\n                        clickOutsideToClose: false,\r\n                        escapeToClose: true,\r\n                        focusOnOpen: false,\r\n                        trapFocus: false,\r\n                        zIndex: 200\r\n                    };\r\n\r\n                if (trackedPanels.mdpTimePicker) {\r\n                    // we already have one open, check to see if user has clicked on same source as currently opened panel. If so, close, don't open new.\r\n                    if (sameInitiator(trackedPanels.mdpTimePicker.config.openFrom, options.targetEvent)) {\r\n                        return trackedPanels.mdpTimePicker.close().then(removePanel);\r\n                    }\r\n\r\n                    // we already have one open, close it and open new.\r\n                    return trackedPanels.mdpTimePicker.close().then(removePanel).then(openPanel);\r\n                }\r\n\r\n\r\n                return openPanel();\r\n\r\n\r\n            };\r\n\r\n        return timePicker;\r\n    }];\r\n});\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function ($mdpTimePicker, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        transclude: true,\r\n        template: function (element, attrs) {\r\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n            return '<div layout layout-align=\"start start\">' +\r\n                '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\r\n                '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\r\n                '</md-button>' +\r\n                '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                '</md-input-container>' +\r\n                '</div>';\r\n        },\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\",\r\n            \"placeholder\": \"@mdpPlaceholder\",\r\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n            \"disabled\": \"=?mdpDisabled\"\r\n        },\r\n        link: function (scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n\r\n            $transclude(function (clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n\r\n            scope.type = scope.timeFormat ? \"text\" : \"time\";\r\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\r\n            scope.autoSwitch = scope.autoSwitch || false;\r\n\r\n            scope.$watch(function () {\r\n                return ngModel.$error;\r\n            }, function (newValue, oldValue) {\r\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n            }, true);\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function (value) {\r\n                var time = angular.isDate(value) && moment(value);\r\n                if (time && time.isValid())\r\n                    updateInputElement(time.format(scope.timeFormat));\r\n                else\r\n                    updateInputElement(null);\r\n            });\r\n\r\n            ngModel.$validators.format = function (modelValue, viewValue) {\r\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\r\n            };\r\n\r\n            ngModel.$validators.required = function (modelValue, viewValue) {\r\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function (value) {\r\n                var parsed = moment(value, scope.timeFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.minutes(parsed.minutes());\r\n                        originalModel.hours(parsed.hours());\r\n                        originalModel.seconds(parsed.seconds());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else\r\n                    return null;\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateTime(time) {\r\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\r\n                    strValue = value.format(scope.timeFormat);\r\n\r\n                if (value.isValid()) {\r\n                    updateInputElement(strValue);\r\n                    ngModel.$setViewValue(strValue);\r\n                } else {\r\n                    updateInputElement(time);\r\n                    ngModel.$setViewValue(time);\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass(\"md-auto-hide\") &&\r\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function (ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }, updateTime);\r\n\r\n                // TODO: add conditional for focusOpOpen flag.\r\n                angular.element(ev.currentTarget.parentElement).find('input').focus();\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewVaue)\r\n                    updateTime(event.target.value);\r\n            }\r\n\r\n            inputElement.on(\"reset input blur\", onInputElementEvents);\r\n\r\n            scope.$on(\"$destroy\", function () {\r\n                inputElement.off(\"reset input blur\", onInputElementEvents);\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function ($mdpTimePicker, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\",\r\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n        },\r\n        link: function (scope, element, attrs, ngModel, $transclude) {\r\n            scope.format = scope.format || \"h:mm A\";\r\n\r\n            function showPicker(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function (time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            }\r\n\r\n            element.on(\"click\", showPicker);\r\n\r\n            scope.$on(\"$destroy\", function () {\r\n                element.off(\"click\", showPicker);\r\n            });\r\n        }\r\n    };\r\n}]);\n/* global moment, angular */\r\n\r\nfunction DatePickerCtrl($rootScope, $scope, $mdPanel, $mdMedia, $timeout, currentDate, options, mdPanelRef, $window) {\r\n    var self = this;\r\n\r\n    this._mdPanelRef = mdPanelRef;\r\n    this.date = moment(currentDate);\r\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n    this.selectingYear = false;\r\n\r\n    this.onWindowResize = function () {\r\n        angular.element($window).off('resize', this.onWindowResize);\r\n        self.cancel();\r\n    };\r\n\r\n    angular.element($window).on('resize', this.onWindowResize);\r\n\r\n    $rootScope.$on('$stateChangeStart', function () {\r\n        self.cancel();\r\n    });\r\n\r\n    $rootScope.$on('$locationChangeSuccess', function () {\r\n        self.cancel();\r\n    });\r\n\r\n\r\n    // validate min and max date\r\n    if (this.minDate && this.maxDate) {\r\n        if (this.maxDate.isBefore(this.minDate)) {\r\n            this.maxDate = moment(this.minDate).add(1, 'days');\r\n        }\r\n    }\r\n\r\n    if (this.date) {\r\n        // check min date\r\n        if (this.minDate && this.date.isBefore(this.minDate)) {\r\n            this.date = moment(this.minDate);\r\n        }\r\n\r\n        // check max date\r\n        if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n            this.date = moment(this.maxDate);\r\n        }\r\n    }\r\n\r\n    this.yearItems = {\r\n        currentIndex_: 0,\r\n        PAGE_SIZE: 5,\r\n        START: (self.minDate ? self.minDate.year() : 1900),\r\n        END: (self.maxDate ? self.maxDate.year() : 0),\r\n        getItemAtIndex: function (index) {\r\n            if (this.currentIndex_ < index)\r\n                this.currentIndex_ = index;\r\n\r\n            return this.START + index;\r\n        },\r\n        getLength: function () {\r\n            return Math.min(\r\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                Math.abs(this.START - this.END) + 1\r\n            );\r\n        }\r\n    };\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n    $scope.year = this.date.year();\r\n\r\n    this.selectYear = function (year) {\r\n        self.date.year(year);\r\n        $scope.year = year;\r\n        self.selectingYear = false;\r\n        self.animate();\r\n    };\r\n\r\n    this.showYear = function () {\r\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n        self.selectingYear = true;\r\n    };\r\n\r\n    this.showCalendar = function () {\r\n        self.selectingYear = false;\r\n    };\r\n\r\n    this.cleanUpTrackedPanels = function (panelRef) {\r\n        if (panelRef._$mdPanel._trackedPanels.mdpDatePicker) {\r\n            delete panelRef._$mdPanel._trackedPanels.mdpDatePicker;\r\n        }\r\n    };\r\n\r\n    this.cancel = function () {\r\n        var panelRef = this._mdPanelRef,\r\n            _self = this;\r\n\r\n        panelRef && panelRef.close().then(function () {\r\n            try {\r\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\r\n                _self.cleanUpTrackedPanels(panelRef);\r\n            } catch (e) {\r\n                console.log('Reference not found ' + e);\r\n            } finally {\r\n                panelRef.destroy();\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n\r\n    this.confirm = function () {\r\n        var date = self.date,\r\n            panelRef = self._mdPanelRef;\r\n\r\n\r\n        if (self.minDate && self.date.isBefore(self.minDate)) {\r\n            date = moment(this.minDate);\r\n        }\r\n\r\n        if (self.maxDate && self.date.isAfter(self.maxDate)) {\r\n            date = moment(self.maxDate);\r\n        }\r\n\r\n        panelRef && panelRef.close().then(function () {\r\n            try {\r\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\r\n                panelRef.config.locals.onClose(date.toDate());\r\n                self.cleanUpTrackedPanels(panelRef);\r\n            } catch (e) {\r\n                console.log('No close function found.');\r\n            } finally {\r\n\r\n                panelRef.destroy();\r\n            }\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n    this.animate = function () {\r\n        self.animating = true;\r\n        $timeout(angular.noop).then(function () {\r\n            self.animating = false;\r\n        });\r\n    };\r\n}\r\n\r\nmodule.provider(\"$mdpDatePicker\", function () {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\",\r\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\r\n\r\n    this.setDisplayFormat = function (format) {\r\n        DISPLAY_FORMAT = format;\r\n    };\r\n\r\n    this.setOKButtonLabel = function (label) {\r\n        LABEL_OK = label;\r\n    };\r\n\r\n    this.setCancelButtonLabel = function (label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n\r\n    this.$get = [\"$mdPanel\", function ($mdPanel) {\r\n        var _mdPanel = $mdPanel,\r\n\r\n            datePicker = function (currentDate, options, cb) {\r\n                var trackedPanels = $mdPanel._trackedPanels,\r\n                    removePanel = function () {\r\n                        trackedPanels.mdpDatePicker.destroy();\r\n                        delete trackedPanels.mdpDatePicker;\r\n                        return;\r\n                    },\r\n                    openPanel = function () {\r\n                        _mdPanel.open(config);\r\n                    },\r\n                    sameInitiator = function (event1, event2) {\r\n                        var previousParent = event1.currentTarget.parentElement,\r\n                            currentParent = event2.currentTarget.parentElement;\r\n\r\n                        return previousParent == currentParent;\r\n                    };\r\n\r\n                if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n                if (!angular.isObject(options)) options = {\r\n                    targetEvent: null\r\n                };\r\n\r\n                options.displayFormat = DISPLAY_FORMAT;\r\n\r\n                var position = _mdPanel.newPanelPosition()\r\n                    .relativeTo(options.targetEvent.currentTarget)\r\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.BELOW)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.BELOW)\r\n\r\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.ABOVE)\r\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.ABOVE),\r\n\r\n                    panelAnimation = $mdPanel.newPanelAnimation()\r\n                    .openFrom(options.targetEvent.currentTarget)\r\n                    .closeTo(options.targetEvent.currentTarget)\r\n                    .withAnimation($mdPanel.animation.SCALE),\r\n\r\n                    config = {\r\n                        id: 'mdpDatePicker',\r\n                        attachTo: angular.element(document.body),\r\n                        controller: ['$rootScope', '$scope', '$mdPanel', '$mdMedia', '$timeout', 'currentDate', 'options', 'mdPanelRef', '$window', DatePickerCtrl],\r\n                        controllerAs: 'datepicker',\r\n                        template: '<md-card class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<div layout=\"row\" layout-wrap>' +\r\n                            '<div layout=\"column\" layout-align=\"start center\">' +\r\n                            '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\r\n                            '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\r\n                            '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\r\n                            '</md-toolbar>' +\r\n                            '</div>' +\r\n                            '<div>' +\r\n                            '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\r\n                            '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\r\n                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\r\n                            '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\r\n                            '</div>' +\r\n                            '</md-virtual-repeat-container>' +\r\n                            '</div>' +\r\n                            '<mdp-calendar ng-if=\"!datepicker.selectingYear\" double-click=\"datepicker.confirm\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\r\n                            '<md-dialog-actions layout=\"row\">' +\r\n                            '<span flex></span>' +\r\n                            '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                            '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                            '</md-dialog-actions>' +\r\n                            '</div>' +\r\n                            '</div>' +\r\n                            '</md-card>',\r\n                        openFrom: options.targetEvent,\r\n                        position: position,\r\n                        animation: panelAnimation,\r\n                        locals: {\r\n                            currentDate: currentDate,\r\n                            options: options,\r\n                            onClose: cb\r\n                        },\r\n                        clickOutsideToClose: false,\r\n                        escapeToClose: true,\r\n                        focusOnOpen: false,\r\n                        trapFocus: false,\r\n                        zIndex: 200\r\n                    };\r\n\r\n                if (trackedPanels.mdpDatePicker) {\r\n                    // we already have one open, check to see if user has clicked on same source as currently opened panel. If so, close, don't open new.\r\n                    if (sameInitiator(trackedPanels.mdpDatePicker.config.openFrom, options.targetEvent)) {\r\n                        return trackedPanels.mdpDatePicker.close().then(removePanel);\r\n                    }\r\n\r\n                    // we already have one open, close it and open new.\r\n                    return trackedPanels.mdpDatePicker.close().then(removePanel).then(openPanel);\r\n                }\r\n\r\n\r\n                return openPanel();\r\n\r\n            };\r\n\r\n        return datePicker;\r\n\r\n    }];\r\n});\r\n\r\n\r\n\r\nfunction CalendarCtrl($scope) {\r\n    var self = this;\r\n    this.dow = moment.localeData().firstDayOfWeek();\r\n\r\n    this.weekDays = [].concat(\r\n        moment.weekdaysMin().slice(\r\n            this.dow\r\n        ),\r\n        moment.weekdaysMin().slice(\r\n            0,\r\n            this.dow\r\n        )\r\n    );\r\n\r\n    this.daysInMonth = [];\r\n\r\n    this.getDaysInMonth = function () {\r\n        var days = self.date.daysInMonth(),\r\n            firstDay = moment(self.date).date(1).day() - this.dow;\r\n\r\n        if (firstDay < 0) firstDay = this.weekDays.length - 1;\r\n\r\n\r\n        var arr = [];\r\n        for (var i = 1; i <= (firstDay + days); i++) {\r\n            var day = null;\r\n            if (i > firstDay) {\r\n                day = {\r\n                    value: (i - firstDay),\r\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                };\r\n            }\r\n            arr.push(day);\r\n        }\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.isDayEnabled = function (day) {\r\n        return (!this.minDate || this.minDate <= day) &&\r\n            (!this.maxDate || this.maxDate >= day) &&\r\n            (!self.dateFilter || !self.dateFilter(day));\r\n    };\r\n\r\n    this.selectDate = function (dom) {\r\n        self.date.date(dom);\r\n    };\r\n\r\n    this.selectDateDblClick = function (dom) {\r\n        self.date.date(dom);\r\n        if (this.doubleClick) {\r\n            this.doubleClick();\r\n\r\n        }\r\n    };\r\n\r\n    this.nextMonth = function () {\r\n        self.date.add(1, 'months');\r\n    };\r\n\r\n    this.prevMonth = function () {\r\n        self.date.subtract(1, 'months');\r\n    };\r\n\r\n    this.updateDaysInMonth = function () {\r\n        self.daysInMonth = self.getDaysInMonth();\r\n    };\r\n\r\n    $scope.$watch(function () {\r\n        return self.date.unix();\r\n    }, function (newValue, oldValue) {\r\n        if (newValue && newValue !== oldValue)\r\n            self.updateDaysInMonth();\r\n    });\r\n\r\n    self.updateDaysInMonth();\r\n}\r\n\r\nmodule.directive(\"mdpCalendar\", [\"$animate\", function ($animate) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            \"date\": \"=\",\r\n            \"minDate\": \"=\",\r\n            \"maxDate\": \"=\",\r\n            \"dateFilter\": \"=\",\r\n            \"doubleClick\": \"=\"\r\n        },\r\n        template: '<div class=\"mdp-calendar\">' +\r\n            '<div layout=\"row\" layout-align=\"space-between center\">' +\r\n            '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\r\n            '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\r\n            '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\r\n            '</div>' +\r\n            '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\r\n            '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\r\n            '</div>' +\r\n            '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\r\n            '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\r\n            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-dblclick=\"calendar.selectDateDblClick(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\r\n            '</div>' +\r\n            '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\r\n            '</div>' +\r\n            '</div>',\r\n        controller: [\"$scope\", CalendarCtrl],\r\n        controllerAs: \"calendar\",\r\n        link: function (scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector(\".mdp-calendar-week-days\"),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function (a) {\r\n                return angular.element(a);\r\n            });\r\n\r\n            scope.$watch(function () {\r\n                return ctrl.date.format(\"YYYYMM\");\r\n            }, function (newValue, oldValue) {\r\n                var direction = null;\r\n\r\n                if (newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if (newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n\r\n                if (direction) {\r\n                    for (var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nfunction formatValidator(value, format) {\r\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n}\r\n\r\nfunction minDateValidator(value, format, minDate) {\r\n    minDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n    var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n    return !value ||\r\n        angular.isDate(value) ||\r\n        !minDate.isValid() ||\r\n        date.isSameOrAfter(minDate);\r\n}\r\n\r\nfunction maxDateValidator(value, format, maxDate) {\r\n    maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n    var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n    return !value ||\r\n        angular.isDate(value) ||\r\n        !maxDate.isValid() ||\r\n        date.isSameOrBefore(maxDate);\r\n}\r\n\r\nfunction filterValidator(value, format, filter) {\r\n    var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n    return !value ||\r\n        angular.isDate(value) ||\r\n        !angular.isFunction(filter) ||\r\n        !filter(date);\r\n}\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function ($mdpDatePicker, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        transclude: true,\r\n        template: function (element, attrs) {\r\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n            return '<div layout layout-align=\"start start\">' +\r\n                '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\r\n                '</md-button>' +\r\n                '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                '</md-input-container>' +\r\n                '</div>';\r\n        },\r\n        scope: {\r\n            \"minDate\": \"=mdpMinDate\",\r\n            \"maxDate\": \"=mdpMaxDate\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\",\r\n            \"placeholder\": \"@mdpPlaceholder\",\r\n            \"noFloat\": \"=mdpNoFloat\",\r\n            \"openOnClick\": \"=mdpOpenOnClick\",\r\n            \"disabled\": \"=?mdpDisabled\"\r\n        },\r\n        link: {\r\n            pre: function (scope, element, attrs, ngModel, $transclude) {\r\n\r\n            },\r\n            post: function (scope, element, attrs, ngModel, $transclude) {\r\n                var inputElement = angular.element(element[0].querySelector('input')),\r\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n\r\n                $transclude(function (clone) {\r\n                    inputContainer.append(clone);\r\n                });\r\n\r\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n\r\n                scope.type = scope.dateFormat ? \"text\" : \"date\";\r\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n                scope.model = ngModel;\r\n\r\n                scope.isError = function () {\r\n                    return !ngModel.$pristine && !!ngModel.$invalid;\r\n                };\r\n\r\n                // update input element if model has changed\r\n                ngModel.$formatters.unshift(function (value) {\r\n                    var date = angular.isDate(value) && moment(value);\r\n                    if (date && date.isValid())\r\n                        updateInputElement(date.format(scope.dateFormat));\r\n                    else\r\n                        updateInputElement(null);\r\n                });\r\n\r\n                ngModel.$validators.format = function (modelValue, viewValue) {\r\n                    return formatValidator(viewValue, scope.dateFormat);\r\n                };\r\n\r\n                ngModel.$validators.minDate = function (modelValue, viewValue) {\r\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\r\n                };\r\n\r\n                ngModel.$validators.maxDate = function (modelValue, viewValue) {\r\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\r\n                };\r\n\r\n                ngModel.$validators.filter = function (modelValue, viewValue) {\r\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\r\n                };\r\n\r\n                ngModel.$validators.required = function (modelValue, viewValue) {\r\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\r\n                };\r\n\r\n                ngModel.$parsers.unshift(function (value) {\r\n                    var parsed = moment(value, scope.dateFormat, true);\r\n                    if (parsed.isValid()) {\r\n                        if (angular.isDate(ngModel.$modelValue)) {\r\n                            var originalModel = moment(ngModel.$modelValue);\r\n                            originalModel.year(parsed.year());\r\n                            originalModel.month(parsed.month());\r\n                            originalModel.date(parsed.date());\r\n\r\n                            parsed = originalModel;\r\n                        }\r\n                        return parsed.toDate();\r\n                    } else\r\n                        return null;\r\n                });\r\n\r\n                // update input element value\r\n                function updateInputElement(value) {\r\n                    inputElement[0].value = value;\r\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n                }\r\n\r\n                function updateDate(date) {\r\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\r\n                        strValue = value.format(scope.dateFormat);\r\n\r\n                    if (value.isValid()) {\r\n                        updateInputElement(strValue);\r\n                        ngModel.$setViewValue(strValue);\r\n                    } else {\r\n                        updateInputElement(date);\r\n                        ngModel.$setViewValue(date);\r\n                    }\r\n\r\n                    if (!ngModel.$pristine &&\r\n                        messages.hasClass(\"md-auto-hide\") &&\r\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n\r\n                    ngModel.$render();\r\n                }\r\n\r\n                scope.showPicker = function (ev) {\r\n                    $mdpDatePicker(ngModel.$modelValue, {\r\n                        minDate: scope.minDate,\r\n                        maxDate: scope.maxDate,\r\n                        dateFilter: scope.dateFilter,\r\n                        targetEvent: ev\r\n                    }, updateDate);\r\n\r\n                    angular.element(ev.currentTarget.parentElement).find('input').focus();\r\n                };\r\n\r\n                function onInputElementEvents(event) {\r\n                    if (event.target.value !== ngModel.$viewVaue)\r\n                        updateDate(event.target.value);\r\n                }\r\n\r\n                inputElement.on(\"reset input blur\", onInputElementEvents);\r\n\r\n                scope.$on(\"$destroy\", function () {\r\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function ($mdpDatePicker, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            \"minDate\": \"@min\",\r\n            \"maxDate\": \"@max\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\",\r\n        },\r\n        link: function (scope, element, attrs, ngModel, $transclude) {\r\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n\r\n            ngModel.$validators.format = function (modelValue, viewValue) {\r\n                return formatValidator(viewValue, scope.format);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function (modelValue, viewValue) {\r\n                return minDateValidator(viewValue, scope.format, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function (modelValue, viewValue) {\r\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function (modelValue, viewValue) {\r\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\r\n            };\r\n\r\n            function showPicker(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(function (time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            }\r\n\r\n            element.on(\"click\", showPicker);\r\n\r\n            scope.$on(\"$destroy\", function () {\r\n                element.off(\"click\", showPicker);\r\n            });\r\n        }\r\n    };\r\n}]);\n})();"]}