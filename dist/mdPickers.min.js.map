{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$rootScope","$scope","$mdPanel","$mdMedia","$timeout","currentDate","options","mdPanelRef","self","this","_mdPanelRef","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","$on","cancel","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","panelRef","close","then","element","document","querySelector","focus","destroy","confirm","test","config","locals","onClose","toDate","e","console","log","animating","noop","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","$mdDialog","time","autoSwitch","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","hide","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","_mdPanel","datePicker","cb","trackedPanels","_trackedPanels","removePanel","mdpDatePicker","openPanel","open","Date","now","isObject","targetEvent","position","newPanelPosition","relativeTo","currentTarget","addPanelPosition","xPosition","CENTER","yPosition","BELOW","panelAnimation","newPanelAnimation","openFrom","closeTo","withAnimation","animation","SCALE","attachTo","body","controller","controllerAs","template","panelClass","clickOutsideToClose","escapeToClose","focusOnOpen","trapFocus","zIndex","$animate","bindToController","link","scope","attrs","ctrl","animElements","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","dateFormat","disabled","pre","ngModel","$transclude","post","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","timePicker","show","skipHide","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($rootScope, $scope, $mdPanel, $mdMedia, $timeout, currentDate, options, mdPanelRef) {\n    var self = this;\n\n    this._mdPanelRef = mdPanelRef;\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    $rootScope.$on('$stateChangeStart', function(){\n        self.cancel();\n    })\n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        //$mdDialog.cancel();\n        var panelRef = this._mdPanelRef;\n\n        panelRef && panelRef.close().then(function() {\n            angular.element(document.querySelector('.demo-dialog-open-button')).focus();\n            panelRef.destroy();\n        });\n    };\n\n    this.confirm = function(test) {\n    \tvar date = this.date,\n            panelRef = this._mdPanelRef;\n    \t\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}  \t\n    \t\n        //$mdDialog.hide(date.toDate());\n        // this.seelctedDate = date.toDate();\n\n\n        panelRef && panelRef.close().then(function() {\n            //angular.element(document.querySelector('.demo-dialog-open-button')).focus();\n            try {\n                panelRef.config.locals.onClose(date.toDate());\n            } catch(e){ \n                console.log('No close function found.');\n            } finally {\n                panelRef.destroy();    \n            }\n            \n        });\n\n\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n        \n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;    \n    };\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdPanel\", function($mdPanel) {\n        var _mdPanel = $mdPanel;\n        \n        var datePicker = function(currentDate, options, cb) {\n            var trackedPanels = $mdPanel._trackedPanels,\n                removePanel = function(){\n                   trackedPanels.mdpDatePicker.destroy();\n                    delete trackedPanels.mdpDatePicker;\n                    return;\n                },\n                openPanel = function(){\n                    _mdPanel.open(config);\n                };\n\n            /*if (trackedPanels.mdpDatePicker) trackedPanels.mdpDatePicker.close().then(function(){\n                trackedPanels.mdpDatePicker.destroy();\n                delete trackedPanels.mdpDatePicker;\n            });*/\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {targetEvent: null};\n            \n            options.displayFormat = DISPLAY_FORMAT;\n\n            var position = _mdPanel.newPanelPosition()\n                .relativeTo(options.targetEvent.currentTarget)\n                .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW);\n\n             var panelAnimation = $mdPanel.newPanelAnimation()\n                .openFrom(options.targetEvent.currentTarget)\n                .closeTo(options.targetEvent.currentTarget)\n                .withAnimation($mdPanel.animation.SCALE);\n\n            var config = {\n                id: 'mdpDatePicker',\n                attachTo: angular.element(document.body),\n                controller:  ['$rootScope', '$scope', '$mdPanel', '$mdMedia', '$timeout', 'currentDate', 'options','mdPanelRef', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                template:   '<md-card class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' + \n                                '<div layout=\"row\" layout-wrap>' + \n                                    '<div layout=\"column\" layout-align=\"start center\">' +\n                                        '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                            '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                            '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                        '</md-toolbar>' + \n                                    '</div>' +  \n                                    '<div>' + \n                                        '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                            '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                                '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                    '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                                '</div>' +\n                                            '</md-virtual-repeat-container>' +\n                                        '</div>' +\n                                        '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                        '<md-dialog-actions layout=\"row\">' +\n                                            '<span flex></span>' +\n                                            '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                            '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                        '</md-dialog-actions>' +\n                                    '</div>' + \n                                '</div>' +\n                            '</md-card>',\n                panelClass: 'mdp-class-baby', //'demo-menu-example',\n                openFrom: options.targetEvent,\n                position: position,\n                animation: panelAnimation,\n                locals: {\n                    currentDate: currentDate,\n                    options: options,\n                    onClose: cb\n                },\n\n                clickOutsideToClose: false,\n                escapeToClose: true,\n                focusOnOpen: false,\n                trapFocus: false,\n                zIndex: 2\n            };\n\n            //return _mdPanel.open(config);\n\n            return trackedPanels.mdpDatePicker ? trackedPanels.mdpDatePicker.close().then(removePanel).then(openPanel) : openPanel();\n    \n        };\n\n        return datePicker;\n    \n    }];\n});\n    \n    \n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\t\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0, \n            this.dow\n        )\n    );\n    \n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n            \n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n            \n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !minDate.isValid() || \n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !maxDate.isValid() || \n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n                \n    return !value || \n            angular.isDate(value) || \n            !angular.isFunction(filter) || \n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n                \n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                    \n                $transclude(function(clone) {\n                   inputContainer.append(clone); \n                });  \n                \n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                \n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                \n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n                \n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) \n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n                \n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n                \n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n                \n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n                \n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n                \n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n                \n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n                            \n                            parsed = originalModel;\n                        }\n                        return parsed.toDate(); \n                    } else\n                        return null;\n                });\n                \n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n                \n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n    \n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n                    \n                    if(!ngModel.$pristine && \n                        messages.hasClass(\"md-auto-hide\") && \n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n    \n                    ngModel.$render();\n                }\n                    \n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }, updateDate);\n                };\n                \n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n                \n                inputElement.on(\"reset input blur\", onInputElementEvents);\n                \n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n            \n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n            \n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n            \n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n            \n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate, \n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch\n                },\n                skipHide: true\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"]}