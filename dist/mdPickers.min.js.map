{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$rootScope","$scope","$mdDialog","time","autoSwitch","$mdMedia","mdPanelRef","$window","self","this","_mdPanelRef","VIEW_HOURS","VIEW_MINUTES","currentView","moment","onWindowResize","angular","element","off","cancel","on","$on","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","cleanUpTrackedPanels","panelRef","_$mdPanel","_trackedPanels","mdpTimePicker","close","then","config","openFrom","currentTarget","focus","e","console","log","destroy","confirm","locals","onClose","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","i","push","DatePickerCtrl","$mdPanel","$timeout","currentDate","options","date","minDate","isValid","maxDate","displayFormat","dateFilter","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","mdpDatePicker","animating","noop","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","value","enabled","isDayEnabled","selectDate","dom","selectDateDblClick","doubleClick","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","module","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","inputContainer","getClosest","toggleClass","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","_mdPanel","timePicker","cb","trackedPanels","removePanel","openPanel","open","sameInitiator","event1","event2","previousParent","parentElement","currentParent","Date","now","isObject","position","newPanelPosition","relativeTo","targetEvent","addPanelPosition","xPosition","CENTER","yPosition","BELOW","ALIGN_START","ALIGN_END","OFFSET_START","OFFSET_END","ABOVE","panelAnimation","newPanelAnimation","closeTo","withAnimation","animation","SCALE","attachTo","document","body","skipHide","clickOutsideToClose","escapeToClose","focusOnOpen","trapFocus","zIndex","$mdpTimePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","timeFormat","disabled","ngModel","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","clone","append","$error","setInvalid","Object","keys","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","find","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","dateFormat","pre","post","updateDate","model","isError","$invalid","month"],"mappings":"CAAA,WACA,YA8DA,SAASA,GAAeC,EAAYC,EAAQC,EAAWC,EAAMC,EAAYC,EAAUC,EAAYC,GAC9F,GAAIC,GAAOC,IAERA,MAAKC,YAAcJ,EACnBG,KAAKE,WAAa,EAClBF,KAAKG,aAAe,EACpBH,KAAKI,YAAcJ,KAAKE,WACxBF,KAAKN,KAAOW,OAAOX,GACnBM,KAAKL,aAAeA,EAEpBK,KAAKM,eAAiB,WAClBC,QAAQC,QAAQV,GAASW,IAAI,SAAUT,KAAKM,gBAC5CP,EAAKW,UAGTH,QAAQC,QAAQV,GAASa,GAAG,SAAUX,KAAKM,gBAE3Cf,EAAWqB,IAAI,oBAAqB,WAChCb,EAAKW,WAGTnB,EAAWqB,IAAI,yBAA0B,WACrCb,EAAKW,WAITV,KAAKa,WAAaC,SAASd,KAAKN,KAAKqB,OAAO,MAC5Cf,KAAKgB,aAAeF,SAASd,KAAKN,KAAKuB,WAE1CzB,EAAOI,SAAWA,EAElBI,KAAKkB,WAAa,WACdnB,EAAKK,YAAcL,EAAKK,aAAeL,EAAKG,WAAaH,EAAKI,aAAeJ,EAAKG,YAGtFF,KAAKmB,MAAQ,WACHpB,EAAKL,KAAK0B,SAAW,IACpBrB,EAAKL,KAAK2B,KAAKtB,EAAKL,KAAK2B,OAAS,KAG1CrB,KAAKsB,MAAQ,WACNvB,EAAKL,KAAK0B,QAAU,IACnBrB,EAAKL,KAAK2B,KAAKtB,EAAKL,KAAK2B,OAAS,KAG1CrB,KAAKuB,qBAAuB,SAASC,GAC7BA,EAASC,UAAUC,eAAeC,qBAC3BH,GAASC,UAAUC,eAAeC,eAIjD3B,KAAKU,OAAS,WACV,GAAIc,GAAWxB,KAAKC,YAChBF,EAAOC,IAEXwB,IAAYA,EAASI,QAAQC,KAAK,WAC9B,IACItB,QAAQC,QAAQgB,EAASM,OAAOC,SAASC,eAAeC,QACxDlC,EAAKwB,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,uBAAyBF,GACvC,QACEV,EAASa,cAMrBrC,KAAKsC,QAAU,WACX,GAAI5C,GAAOK,EAAKL,KACZ8B,EAAWzB,EAAKE,WAEpBuB,IAAYA,EAASI,QAAQC,KAAK,WAC9B,IACItB,QAAQC,QAAQgB,EAASM,OAAOC,SAASC,eAAeC,QACxDT,EAASM,OAAOS,OAAOC,QAAQ9C,EAAK+C,UACpC1C,EAAKwB,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,4BACd,QAEEZ,EAASa,cAOzB,QAASK,GAAUlD,GACf,GAAImD,GAAa,QACbC,EAAe,UACf7C,EAAOC,IAEXA,MAAK6C,SAAW,GAChB7C,KAAK8C,SAEL9C,KAAK+C,aACD3B,OACI4B,MAAO,IAEX/B,SACI+B,MAAO,KAIfhD,KAAKiD,gBAAkB,WACnB,GAAIC,GAAU,CACd,QAAOnD,EAAKoD,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAGlB,GAAIE,GAAUC,KAAKC,MAAMvD,EAAKwD,UAAY,IAAML,IAAY,GAC5D,QACIM,oBAAqB,UAAYJ,EAAU,OAC3CK,gBAAiB,UAAYL,EAAU,OACvCM,UAAa,UAAYN,EAAU,SAI3CpD,KAAK2D,aAAe,SAASC,GACzBA,EAAMA,GAAO,IAAM,EAAIA,CACvB,IAAIV,GAAU,CACd,QAAOnD,EAAKoD,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAIlBnD,EAAK8D,QACDR,KAAKC,MAAMJ,EAAU,IAAMU,KAInC5D,KAAK6D,QAAU,SAASnE,EAAMyD,GAG1B,OAFAnD,KAAKuD,SAAW7D,EAETK,EAAKoD,MACR,IAAKR,GAC2B,MAAzB5C,EAAKL,KAAKqB,OAAO,OAAcrB,GAAQ,IAC1CM,KAAKN,KAAK0B,MAAM1B,EAChB,MACJ,KAAKkD,GACElD,EAAO,KAAIA,GAAQ,IACtBM,KAAKN,KAAKuB,QAAQvB,KAM9BM,KAAK8D,KAAO,WAER,OADA/D,EAAKoD,KAAOpD,EAAKoD,MAAQ,QAClBpD,EAAKoD,MACR,IAAKR,GACD,IAAI,GAAIoB,GAAI,EAAGA,GAAK,GAAIA,IACpBhE,EAAK+C,MAAMkB,KAAKD,EACpBhE,GAAKwD,SAAWxD,EAAKL,KAAK0B,SAAW,EAClCrB,EAAKwD,SAAW,KAAIxD,EAAKwD,UAAY,GAExC,MACJ,KAAKX,GACD,IAAI,GAAImB,GAAI,EAAGA,GAAK,GAAIA,GAAG,EACvBhE,EAAK+C,MAAMkB,KAAKD,EACpBhE,GAAK+C,MAAMkB,KAAK,GAChBjE,EAAKwD,SAAWxD,EAAKL,KAAKuB,WAAa,IAMnDjB,KAAK8D,OA+UT,QAASG,GAAe1E,EAAYC,EAAQ0E,EAAUtE,EAAUuE,EAAUC,EAAaC,EAASxE,EAAYC,GACxG,GAAIC,GAAOC,IAEXA,MAAKC,YAAcJ,EACnBG,KAAKsE,KAAOjE,OAAO+D,GACnBpE,KAAKuE,QAAUF,EAAQE,SAAWlE,OAAOgE,EAAQE,SAASC,UAAYnE,OAAOgE,EAAQE,SAAW,KAChGvE,KAAKyE,QAAUJ,EAAQI,SAAWpE,OAAOgE,EAAQI,SAASD,UAAYnE,OAAOgE,EAAQI,SAAW,KAChGzE,KAAK0E,cAAgBL,EAAQK,eAAiB,cAC9C1E,KAAK2E,WAAapE,QAAQqE,WAAWP,EAAQM,YAAcN,EAAQM,WAAa,KAChF3E,KAAK6E,eAAgB,EAErB7E,KAAKM,eAAiB,WAClBC,QAAQC,QAAQV,GAASW,IAAI,SAAUT,KAAKM,gBAC5CP,EAAKW,UAGTH,QAAQC,QAAQV,GAASa,GAAG,SAAUX,KAAKM,gBAE3Cf,EAAWqB,IAAI,oBAAqB,WAChCb,EAAKW,WAGTnB,EAAWqB,IAAI,yBAA0B,WACrCb,EAAKW,WAKRV,KAAKuE,SAAWvE,KAAKyE,SACpBzE,KAAKyE,QAAQK,SAAS9E,KAAKuE,WAC9BvE,KAAKyE,QAAUpE,OAAOL,KAAKuE,SAASQ,IAAI,EAAG,SAIzC/E,KAAKsE,OAEDtE,KAAKuE,SAAWvE,KAAKsE,KAAKQ,SAAS9E,KAAKuE,WAC9CvE,KAAKsE,KAAOjE,OAAOL,KAAKuE,UAIlBvE,KAAKyE,SAAWzE,KAAKsE,KAAKU,QAAQhF,KAAKyE,WAC7CzE,KAAKsE,KAAOjE,OAAOL,KAAKyE,WAI1BzE,KAAKiF,WACEC,cAAe,EACfC,UAAW,EACXC,MAAQrF,EAAKwE,QAAUxE,EAAKwE,QAAQc,OAAS,KAC7CC,IAAMvF,EAAK0E,QAAU1E,EAAK0E,QAAQY,OAAS,EAC3CE,eAAgB,SAASC,GAIxB,MAHGxF,MAAKkF,cAAgBM,IACjBxF,KAAKkF,cAAgBM,GAErBxF,KAAKoF,MAAQI,GAErBC,UAAW,WACP,MAAOpC,MAAKqC,IACR1F,KAAKkF,cAAgB7B,KAAKsC,MAAM3F,KAAKmF,UAAY,GACjD9B,KAAKuC,IAAI5F,KAAKoF,MAAQpF,KAAKsF,KAAO,KAK9C9F,EAAOI,SAAWA,EAClBJ,EAAO6F,KAAOrF,KAAKsE,KAAKe,OAE3BrF,KAAK6F,WAAa,SAASR,GACpBtF,EAAKuE,KAAKe,KAAKA,GACf7F,EAAO6F,KAAOA,EACdtF,EAAK8E,eAAgB,EACrB9E,EAAK+F,WAGT9F,KAAK+F,SAAW,WACZhG,EAAKiG,aAAgBjG,EAAKuE,KAAKe,OAAStF,EAAKkF,UAAUG,MAAS/B,KAAKsC,MAAM5F,EAAKkF,UAAUE,UAAY,GACtGpF,EAAKkF,UAAUC,cAAiBnF,EAAKuE,KAAKe,OAAStF,EAAKkF,UAAUG,MAAS,EAC3ErF,EAAK8E,eAAgB,GAGzB7E,KAAKiG,aAAe,WAChBlG,EAAK8E,eAAgB,GAGzB7E,KAAKuB,qBAAuB,SAASC,GAC7BA,EAASC,UAAUC,eAAewE,qBAC3B1E,GAASC,UAAUC,eAAewE,eAIjDlG,KAAKU,OAAS,WACV,GAAIc,GAAWxB,KAAKC,YAChBF,EAAOC,IAEXwB,IAAYA,EAASI,QAAQC,KAAK,WAC9B,IACItB,QAAQC,QAAQgB,EAASM,OAAOC,SAASC,eAAeC,QACxDlC,EAAKwB,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,uBAAyBF,GACvC,QACEV,EAASa,cAOrBrC,KAAKsC,QAAU,WACd,GAAIgC,GAAOvE,EAAKuE,KACT9C,EAAWzB,EAAKE,WAGnBF,GAAKwE,SAAWxE,EAAKuE,KAAKQ,SAAS/E,EAAKwE,WAC3CD,EAAOjE,OAAOL,KAAKuE,UAGhBxE,EAAK0E,SAAW1E,EAAKuE,KAAKU,QAAQjF,EAAK0E,WAC1CH,EAAOjE,OAAON,EAAK0E,UAGjBjD,GAAYA,EAASI,QAAQC,KAAK,WAC9B,IACItB,QAAQC,QAAQgB,EAASM,OAAOC,SAASC,eAAeC,QACxDT,EAASM,OAAOS,OAAOC,QAAQ8B,EAAK7B,UACpC1C,EAAKwB,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,4BACd,QAEEZ,EAASa,cAQrBrC,KAAK8F,QAAU,WACX/F,EAAKoG,WAAY,EACjBhC,EAAS5D,QAAQ6F,MAAMvE,KAAK,WACxB9B,EAAKoG,WAAY,KAqI7B,QAASE,GAAa7G,GACrB,GAAIO,GAAOC,IACXA,MAAKsG,IAAMjG,OAAOkG,aAAaC,iBAE5BxG,KAAKyG,YAAcC,OACfrG,OAAOsG,cAAcC,MACjB5G,KAAKsG,KAETjG,OAAOsG,cAAcC,MACjB,EACA5G,KAAKsG,MAIbtG,KAAK6G,eAEL7G,KAAK8G,eAAiB,WAClB,GAAIC,GAAOhH,EAAKuE,KAAKuC,cACjBG,EAAW3G,OAAON,EAAKuE,MAAMA,KAAK,GAAG2C,MAAQjH,KAAKsG,GAEnDU,GAAW,IAAGA,EAAWhH,KAAKyG,SAASS,OAAS,EAInD,KAAI,GADAC,MACIpD,EAAI,EAAGA,GAAMiD,EAAWD,EAAOhD,IAAK,CACxC,GAAIkD,GAAM,IACPlD,GAAIiD,IACHC,GACIG,MAAQrD,EAAIiD,EACZK,QAAStH,EAAKuH,aAAajH,OAAON,EAAKuE,MAAMA,KAAKP,EAAIiD,GAAUvE,YAGxE0E,EAAInD,KAAKiD,GAGb,MAAOE,IAGXnH,KAAKsH,aAAe,SAASL,GACzB,QAASjH,KAAKuE,WAAWvE,KAAKuE,SAAW0C,IACnCjH,KAAKyE,WAAWzE,KAAKyE,SAAWwC,IAChClH,EAAK4E,YAAe5E,EAAK4E,WAAWsC,KAG9CjH,KAAKuH,WAAa,SAASC,GACvBzH,EAAKuE,KAAKA,KAAKkD,IAGnBxH,KAAKyH,mBAAqB,SAASD,GAC/BzH,EAAKuE,KAAKA,KAAKkD,GACXxH,KAAK0H,aACL1H,KAAK0H,eAKb1H,KAAK2H,UAAY,WACb5H,EAAKuE,KAAKS,IAAI,EAAG,WAGrB/E,KAAK4H,UAAY,WACb7H,EAAKuE,KAAKuD,SAAS,EAAG,WAG1B7H,KAAK8H,kBAAoB,WACrB/H,EAAK8G,YAAc9G,EAAK+G,kBAG5BtH,EAAOuI,OAAO,WAAa,MAAQhI,GAAKuE,KAAK0D,QAAU,SAASC,EAAUC,GACnED,GAAYA,IAAaC,GACxBnI,EAAK+H,sBAGb/H,EAAK+H,oBA2DT,QAASK,GAAgBf,EAAOrG,GAC5B,OAAQqG,GAAS7G,QAAQ6H,OAAOhB,IAAU/G,OAAO+G,EAAOrG,GAAQ,GAAMyD,UAG1E,QAAS6D,GAAiBjB,EAAOrG,EAAQwD,GACrC,GAAIA,GAAUlE,OAAOkE,EAAS,cAAc,GACxCD,EAAO/D,QAAQ6H,OAAOhB,GAAS/G,OAAO+G,GAAU/G,OAAO+G,EAAOrG,GAAQ,EAE1E,QAAQqG,GACA7G,QAAQ6H,OAAOhB,KACd7C,EAAQC,WACTF,EAAKgE,cAAc/D,GAG/B,QAASgE,GAAiBnB,EAAOrG,EAAQ0D,GACrC,GAAIA,GAAUpE,OAAOoE,EAAS,cAAc,GACxCH,EAAO/D,QAAQ6H,OAAOhB,GAAS/G,OAAO+G,GAAU/G,OAAO+G,EAAOrG,GAAQ,EAE1E,QAAQqG,GACA7G,QAAQ6H,OAAOhB,KACd3C,EAAQD,WACTF,EAAKkE,eAAe/D,GAGhC,QAASgE,GAAgBrB,EAAOrG,EAAQ2H,GACpC,GAAIpE,GAAO/D,QAAQ6H,OAAOhB,GAAS/G,OAAO+G,GAAU/G,OAAO+G,EAAOrG,GAAQ,EAE1E,QAAQqG,GACA7G,QAAQ6H,OAAOhB,KACd7G,QAAQqE,WAAW8D,KACnBA,EAAOpE,GA/+BpB,GAAIqE,GAASpI,QAAQoI,OAAO,aAC3B,aACA,YACA,UAGDA,GAAO7G,QAAQ,kBAAmB,mBAAoB,SAAS8G,EAAiBC,GAC/EtI,QAAQuI,QAAQD,EAAkB,SAASE,EAAMvD,GAChDoD,EAAgBG,KAAKA,EAAKC,GAAID,EAAKE,UAIrCN,EAAOO,KAAK,iBAAkB,mBAAoB,SAASC,EAAgBN,GAC1EtI,QAAQuI,QAAQD,EAAkB,SAASE,EAAMvD,GAChD2D,EAAeC,IAAIL,EAAKE,IAAKF,EAAKM,UAGpCV,EAAOW,SAAS,qBAERN,GAAI,mBACJC,IAAK,uBACLI,IAAK,4LAGLL,GAAI,oBACJC,IAAK,wBACLI,IAAK,6LAGLL,GAAI,kBACJC,IAAK,sBACLI,IAAK,kVAGLL,GAAI,YACJC,IAAK,gBACLI,IAAK,wRAGbV,EAAOY,UAAU,aAAc,UAAW,SAASC,GAChD,OACKC,SAAU,KACVC,SAAU,IACVC,QAAS,SAASnJ,GACd,GAAIoJ,GAAiBJ,EAAQK,WAAWrJ,EAAS,mBAAmB,IAC/CgJ,EAAQK,WAAWrJ,EAAS,mBAAmB,EAGpE,IAAKoJ,EAKL,MAFApJ,GAAQsJ,YAAY,8BAA8B,WA2L9DnB,EAAOY,UAAU,YAAa,WAAY,WAAY,SAASQ,EAAU5F,GACrE,OACIsF,SAAU,IACVO,kBACI7G,KAAQ,KACRzD,KAAQ,IACRC,WAAc,MAElBsK,SAAS,EACTC,SAAU,khBASVC,YAAa,SAAUzH,GACvB0H,aAAc,QACdC,KAAM,SAASC,EAAO9J,EAAS+J,EAAOC,GAClC,GACIC,IADUlK,QAAQC,QAAQA,EAAQ,GAAGkK,cAAc,iBAClCJ,EAAMK,QAAQC,YAE/BC,EAAU,SAASC,GACnB,GAAIC,GAAkBD,EAAM9I,cAAcgJ,iBAAiB,GACvDC,EAAMH,EAAM9I,cAAckJ,YAAc,GAAMJ,EAAMK,MAAQJ,EAAgBK,MAC5EC,EAAMP,EAAMQ,MAAQP,EAAgBQ,IAAQT,EAAM9I,cAAcwJ,aAAe,EAE/E5H,EAAMP,KAAKC,MAAOD,KAAKoI,MAAMR,EAAGI,IAAM,IAAMhI,KAAKqI,IACrDvH,GAAS,WACLqG,EAAK7G,aAAaC,EAAM,KACrB4G,EAAK7K,aAAe,UAAW,SAASgM,QAAQb,EAAM3H,YAAgBsH,GAAgBA,EAAevJ,eAIhHV,GAAQG,GAAG,YAAa,WACrBH,EAAQG,GAAG,YAAakK,KAG3BrK,EAAQG,GAAG,UAAW,SAASuB,GAC3B1B,EAAQC,IAAI,eAGhBD,EAAQG,GAAG,QAASkK,GACpBP,EAAM1J,IAAI,WAAY,WAClBJ,EAAQC,IAAI,QAASoK,GACrBrK,EAAQC,IAAI,YAAaoK,UAMzClC,EAAOiD,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,QAEnB9L,MAAK+L,iBAAmB,SAASC,GAC7BH,EAAWG,GAGfhM,KAAKiM,qBAAuB,SAASD,GACjCF,EAAeE,GAGnBhM,KAAKkM,MAAQ,WAAY,SAAShI,GAE9B,GAAIiI,GAAWjI,EAEfkI,EAAa,SAAS1M,EAAM2E,EAASgI,GACjC,GAAIC,GAAgBpI,EAASxC,eACzB6K,EAAc,WACXD,EAAc3K,cAAcU,gBACpBiK,GAAc3K,eAGzB6K,EAAY,WACRL,EAASM,KAAK3K,IAElB4K,EAAgB,SAASC,EAAQC,GAC7B,GAAIC,GAAiBF,EAAO3K,cAAc8K,cACtCC,EAAgBH,EAAO5K,cAAc8K,aAEzC,OAAOD,IAAkBE,EAG7BxM,SAAQ6H,OAAO1I,KAAOA,EAAOsN,KAAKC,OACjC1M,QAAQ2M,SAAS7I,KAAUA,KAEhC,IAAI8I,GAAWhB,EAASiB,mBACfC,WAAWhJ,EAAQiJ,YAAYtL,eAC/BuL,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUC,OAC/DJ,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUC,OACpEJ,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUC,OAClEJ,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUC,OACrEJ,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUC,OAEnEJ,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUM,OAC/DT,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUM,OACpET,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUM,OAClET,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUM,OACrET,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUM,OAExEC,EAAiB/J,EAASgK,oBACrBnM,SAASsC,EAAQiJ,YAAYtL,eAC7BmM,QAAQ9J,EAAQiJ,YAAYtL,eAC5BoM,cAAclK,EAASmK,UAAUC,OAEtCxM,GACIkH,GAAI,gBACJuF,SAAUhO,QAAQC,QAAQgO,SAASC,MACnCtE,YAAc,aAAc,SAAU,WAAY,OAAQ,aAAc,WAAY,aAAc,UAAW7K,GAC7G8K,aAAc,aACdF,SAAU,67CAoByE4B,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yDAKpI9J,SAAUsC,EAAQiJ,YAClBH,SAAUA,EACVkB,UAAWJ,EACX1L,QACI7C,KAAMA,EACNC,WAAY0E,EAAQ1E,WACpB6C,QAAS6J,GAEbqC,UAAU,EACVC,qBAAqB,EACrBC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,OAAQ,IAGhB,OAAIzC,GAAc3K,cAEV+K,EAAcJ,EAAc3K,cAAcG,OAAOC,SAAUsC,EAAQiJ,aAC5DhB,EAAc3K,cAAcC,QAAQC,KAAK0K,GAI7CD,EAAc3K,cAAcC,QAAQC,KAAK0K,GAAa1K,KAAK2K,GAI/DA,IAKX,OAAOJ,OAIfzD,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAASyF,EAAgB7K,GACtF,OACIsF,SAAU,IACVwF,QAAS,UACTC,YAAY,EACZhF,SAAU,SAAS1J,EAAS+J,GACxB,GAAI4E,GAAU5O,QAAQ6O,UAAU7E,EAAM8E,YAClCC,EAAc/O,QAAQ6O,UAAU7E,EAAMgF,gBAAkBhF,EAAMgF,eAAiB,GAC/EC,IAAcjP,QAAQ6O,UAAU7E,EAAMkF,eAE1C,OAAO,0GACsElP,QAAQ6O,UAAU7E,EAAMmF,aAAe,0BAA4B,IAAM,qFAGrHP,EAAU,eAAiB,IAAM,uDACtB5O,QAAQ6O,UAAU7E,EAAMmF,aAAe,0BAA4B,IAAM,gBAAkBJ,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI1PlF,OACIqF,WAAc,aACdL,YAAe,kBACf3P,WAAc,kBACdiQ,SAAY,iBAEhBvF,KAAM,SAASC,EAAO9J,EAAS+J,EAAOsF,EAASC,GAqD3C,QAASC,GAAmB3I,GACxB4I,EAAa,GAAG5I,MAAQA,EACxB6I,EAAmBC,aAAaL,EAAQM,SAAS/I,IAGrD,QAASgJ,GAAW1Q,GAChB,GAAI0H,GAAQ/G,OAAOX,EAAMa,QAAQ6H,OAAO1I,GAAQ,KAAO4K,EAAMqF,YAAY,GACrEU,EAAWjJ,EAAMrG,OAAOuJ,EAAMqF,WAE/BvI,GAAM5C,WACLuL,EAAmBM,GACnBR,EAAQS,cAAcD,KAEtBN,EAAmBrQ,GACnBmQ,EAAQS,cAAc5Q,KAGtBmQ,EAAQU,WACRC,EAASC,SAAS,iBAClB7G,EAAe6G,SAAS,qBAAqBD,EAASE,YAAY,gBAEtEb,EAAQc,UAaZ,QAASC,GAAqB9F,GACvBA,EAAM+F,OAAOzJ,QAAUyI,EAAQiB,WAC9BV,EAAWtF,EAAM+F,OAAOzJ,OAxFhC,GAAI4I,GAAezP,QAAQC,QAAQA,EAAQ,GAAGkK,cAAc,UACxDd,EAAiBrJ,QAAQC,QAAQA,EAAQ,GAAGkK,cAAc,uBAC1DuF,EAAqBrG,EAAeO,WAAW,mBAEnD2F,GAAY,SAASiB,GAClBnH,EAAeoH,OAAOD,IAGzB,IAAIP,GAAWjQ,QAAQC,QAAQoJ,EAAe,GAAGc,cAAc,iBAE/DJ,GAAMnH,KAAOmH,EAAMqF,WAAa,OAAS,OACzCrF,EAAMqF,WAAarF,EAAMqF,YAAc,SACvCrF,EAAM3K,WAAa2K,EAAM3K,aAAc,EAEvC2K,EAAMvC,OAAO,WAAa,MAAO8H,GAAQoB,QAAU,SAAShJ,EAAUC,GAClE+H,EAAmBiB,YAAYrB,EAAQU,aAAeY,OAAOC,KAAKvB,EAAQoB,QAAQ/J,UACnF,GAGH2I,EAAQwB,YAAYC,QAAQ,SAASlK,GACjC,GAAI1H,GAAOa,QAAQ6H,OAAOhB,IAAU/G,OAAO+G,EAEvC2I,GADDrQ,GAAQA,EAAK8E,UACO9E,EAAKqB,OAAOuJ,EAAMqF,YAElB,QAG3BE,EAAQ0B,YAAYxQ,OAAS,SAASyQ,EAAYC,GAC9C,OAAQA,GAAalR,QAAQ6H,OAAOqJ,IAAcpR,OAAOoR,EAAWnH,EAAMqF,YAAY,GAAMnL,WAGhGqL,EAAQ0B,YAAYG,SAAW,SAASF,EAAYC,GAChD,MAAOlR,SAAQoR,YAAYpH,EAAMmH,YAAc7B,EAAQM,SAASqB,KAAgB3B,EAAQM,SAASsB,IAGrG5B,EAAQ+B,SAASN,QAAQ,SAASlK,GAC9B,GAAIyK,GAASxR,OAAO+G,EAAOkD,EAAMqF,YAAY,EAC7C,IAAGkC,EAAOrN,UAAW,CACjB,GAAGjE,QAAQ6H,OAAOyH,EAAQiC,aAAc,CACpC,GAAIC,GAAgB1R,OAAOwP,EAAQiC,YACnCC,GAAc9Q,QAAQ4Q,EAAO5Q,WAC7B8Q,EAAc3Q,MAAMyQ,EAAOzQ,SAC3B2Q,EAAcC,QAAQH,EAAOG,WAE7BH,EAASE,EAEb,MAAOF,GAAOpP,SAEd,MAAO,QA4Bf6H,EAAM2H,WAAa,SAASC,GACxBlD,EAAea,EAAQiC,aACnBxE,YAAa4E,EACbvS,WAAY2K,EAAM3K,YACnByQ,GAGH7P,QAAQC,QAAQ0R,EAAGlQ,cAAc8K,eAAeqF,KAAK,SAASlQ,SAQlE+N,EAAarP,GAAG,mBAAoBiQ,GAEpCtG,EAAM1J,IAAI,WAAY,WAClBoP,EAAavP,IAAI,mBAAoBmQ,UAMrDjI,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAASyF,EAAgB7K,GACtF,OACIsF,SAAU,IACVwF,QAAS,UACT3E,OACIqF,WAAc,aACdhQ,WAAc,mBAElB0K,KAAM,SAASC,EAAO9J,EAAS+J,EAAOsF,EAASC,GAE3C,QAASmC,GAAWC,GAChBlD,EAAea,EAAQiC,aACnBxE,YAAa4E,EACbvS,WAAY2K,EAAM3K,aACnBkC,KAAK,SAASnC,GACbmQ,EAAQS,cAAcjQ,OAAOX,GAAMqB,OAAOuJ,EAAMvJ,SAChD8O,EAAQc,YAPhBrG,EAAMvJ,OAASuJ,EAAMvJ,QAAU,SAW/BP,EAAQG,GAAG,QAASsR,GAEpB3H,EAAM1J,IAAI,WAAY,WAClBJ,EAAQC,IAAI,QAASwR,UA2JrCtJ,EAAOiD,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfsG,EAAiB,aAErBpS,MAAKqS,iBAAmB,SAAStR,GAC7BqR,EAAiBrR,GAGrBf,KAAK+L,iBAAmB,SAASC,GAC7BH,EAAWG,GAGfhM,KAAKiM,qBAAuB,SAASD,GACjCF,EAAeE,GAGnBhM,KAAKkM,MAAQ,WAAY,SAAShI,GAC9B,GAAIiI,GAAWjI,EAEfoO,EAAa,SAASlO,EAAaC,EAASgI,GACxC,GAAIC,GAAgBpI,EAASxC,eACzB6K,EAAc,WACXD,EAAcpG,cAAc7D,gBACpBiK,GAAcpG,eAGzBsG,EAAY,WACRL,EAASM,KAAK3K,IAElB4K,EAAgB,SAASC,EAAQC,GAC7B,GAAIC,GAAiBF,EAAO3K,cAAc8K,cACtCC,EAAgBH,EAAO5K,cAAc8K,aAEzC,OAAOD,IAAkBE,EAG5BxM,SAAQ6H,OAAOhE,KAAcA,EAAc4I,KAAKC,OAChD1M,QAAQ2M,SAAS7I,KAAUA,GAAWiJ,YAAa,OAExDjJ,EAAQK,cAAgB0N,CAExB,IAAIjF,GAAWhB,EAASiB,mBACfC,WAAWhJ,EAAQiJ,YAAYtL,eAC/BuL,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUC,OAC/DJ,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUC,OACpEJ,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUC,OAClEJ,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUC,OACrEJ,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUC,OAEnEJ,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUM,OAC/DT,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUM,OACpET,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUM,OAClET,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUM,OACrET,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUM,OAExEC,EAAiB/J,EAASgK,oBACrBnM,SAASsC,EAAQiJ,YAAYtL,eAC7BmM,QAAQ9J,EAAQiJ,YAAYtL,eAC5BoM,cAAclK,EAASmK,UAAUC,OAEtCxM,GACIkH,GAAI,gBACJuF,SAAUhO,QAAQC,QAAQgO,SAASC,MACnCtE,YAAc,aAAc,SAAU,WAAY,WAAY,WAAY,cAAe,UAAU,aAAc,UAAWlG,GAC5HmG,aAAc,aACdF,SAAY,89CAmB2E4B,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yDAKxI9J,SAAUsC,EAAQiJ,YAClBH,SAAUA,EACVkB,UAAWJ,EACX1L,QACI6B,YAAaA,EACbC,QAASA,EACT7B,QAAS6J,GAEbsC,qBAAqB,EACrBC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,OAAQ,IAGhB,OAAIzC,GAAcpG,cAEVwG,EAAcJ,EAAcpG,cAAcpE,OAAOC,SAAUsC,EAAQiJ,aAC5DhB,EAAcpG,cAActE,QAAQC,KAAK0K,GAI7CD,EAAcpG,cAActE,QAAQC,KAAK0K,GAAa1K,KAAK2K,GAI/DA,IAIX,OAAO8F,OAmFf3J,EAAOY,UAAU,eAAgB,WAAY,SAASQ,GAClD,OACIN,SAAU,IACVO,kBACI1F,KAAQ,IACRC,QAAW,IACXE,QAAW,IACXE,WAAc,IACd+C,YAAe,KAEnBwC,SAAU,g+CAgBVC,YAAa,SAAU9D,GACvB+D,aAAc,WACdC,KAAM,SAASC,EAAO9J,EAAS+J,EAAOC,GAClC,GAAI+H,IACA/R,EAAQ,GAAGkK,cAAc,2BACzBlK,EAAQ,GAAGkK,cAAc,sBACzBlK,EAAQ,GAAGkK,cAAc,4BAC3B8H,IAAI,SAASC,GACZ,MAAOlS,SAAQC,QAAQiS,IAG1BnI,GAAMvC,OAAO,WAAa,MAAQyC,GAAKlG,KAAKvD,OAAO,WAAa,SAASkH,EAAUC,GAC/E,GAAIwK,GAAY,IAOhB,IALGzK,EAAWC,EACVwK,EAAY,mBACRzK,EAAWC,IACfwK,EAAY,oBAEbA,EACC,IAAI,GAAI3O,KAAKwO,GACTA,EAAaxO,GAAG4O,SAASD,GACzB3I,EAAS2G,YAAY6B,EAAaxO,GAAI2O,UA6C9D/J,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAASqJ,EAAgBzO,GACtF,OACIsF,SAAU,IACVwF,QAAS,UACTC,YAAY,EACZhF,SAAU,SAAS1J,EAAS+J,GACxB,GAAI4E,GAAU5O,QAAQ6O,UAAU7E,EAAM8E,YAClCC,EAAc/O,QAAQ6O,UAAU7E,EAAMgF,gBAAkBhF,EAAMgF,eAAiB,GAC/EC,IAAcjP,QAAQ6O,UAAU7E,EAAMkF,eAE1C,OAAO,qDACiBlP,QAAQ6O,UAAU7E,EAAMmF,aAAe,0BAA4B,IAAM,oIAGhEP,EAAU,eAAiB,IAAM,uDACtB5O,QAAQ6O,UAAU7E,EAAMmF,aAAe,0BAA4B,IAAM,gBAAkBJ,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI1PlF,OACI/F,QAAW,cACXE,QAAW,cACXE,WAAc,iBACdkO,WAAc,aACdvD,YAAe,kBACfH,QAAW,cACXK,YAAe,kBACfI,SAAY,iBAEhBvF,MACIyI,IAAK,SAASxI,EAAO9J,EAAS+J,EAAOsF,EAASC,KAG9CiD,KAAM,SAASzI,EAAO9J,EAAS+J,EAAOsF,EAASC,GAiE3C,QAASC,GAAmB3I,GACxB4I,EAAa,GAAG5I,MAAQA,EACxB6I,EAAmBC,aAAaL,EAAQM,SAAS/I,IAGrD,QAAS4L,GAAW1O,GAChB,GAAI8C,GAAQ/G,OAAOiE,EAAM/D,QAAQ6H,OAAO9D,GAAQ,KAAOgG,EAAMuI,YAAY,GACrExC,EAAWjJ,EAAMrG,OAAOuJ,EAAMuI,WAE/BzL,GAAM5C,WACLuL,EAAmBM,GACnBR,EAAQS,cAAcD,KAEtBN,EAAmBzL,GACnBuL,EAAQS,cAAchM,KAGtBuL,EAAQU,WACRC,EAASC,SAAS,iBAClB7G,EAAe6G,SAAS,qBAAqBD,EAASE,YAAY,gBAEtEb,EAAQc,UAcZ,QAASC,GAAqB9F,GACvBA,EAAM+F,OAAOzJ,QAAUyI,EAAQiB,WAC9BkC,EAAWlI,EAAM+F,OAAOzJ,OArGhC,GAAI4I,GAAezP,QAAQC,QAAQA,EAAQ,GAAGkK,cAAc,UACxDd,EAAiBrJ,QAAQC,QAAQA,EAAQ,GAAGkK,cAAc,uBAC1DuF,EAAqBrG,EAAeO,WAAW,mBAEnD2F,GAAY,SAASiB,GAClBnH,EAAeoH,OAAOD,IAGzB,IAAIP,GAAWjQ,QAAQC,QAAQoJ,EAAe,GAAGc,cAAc,iBAE/DJ,GAAMnH,KAAOmH,EAAMuI,WAAa,OAAS,OACzCvI,EAAMuI,WAAavI,EAAMuI,YAAc,aACvCvI,EAAM2I,MAAQpD,EAEdvF,EAAM4I,QAAU,WACZ,OAAQrD,EAAQU,aAAeV,EAAQsD,UAI3CtD,EAAQwB,YAAYC,QAAQ,SAASlK,GACjC,GAAI9C,GAAO/D,QAAQ6H,OAAOhB,IAAU/G,OAAO+G,EAEvC2I,GADDzL,GAAQA,EAAKE,UACOF,EAAKvD,OAAOuJ,EAAMuI,YAElB,QAG3BhD,EAAQ0B,YAAYxQ,OAAS,SAASyQ,EAAYC,GAC9C,MAAOtJ,GAAgBsJ,EAAWnH,EAAMuI,aAG5ChD,EAAQ0B,YAAYhN,QAAU,SAASiN,EAAYC,GAC/C,MAAOpJ,GAAiBoJ,EAAWnH,EAAMuI,WAAYvI,EAAM/F,UAG/DsL,EAAQ0B,YAAY9M,QAAU,SAAS+M,EAAYC,GAC/C,MAAOlJ,GAAiBkJ,EAAWnH,EAAMuI,WAAYvI,EAAM7F,UAG/DoL,EAAQ0B,YAAY7I,OAAS,SAAS8I,EAAYC,GAC9C,MAAOhJ,GAAgBgJ,EAAWnH,EAAMuI,WAAYvI,EAAM3F,aAG9DkL,EAAQ0B,YAAYG,SAAW,SAASF,EAAYC,GAChD,MAAOlR,SAAQoR,YAAYpH,EAAMmH,YAAc7B,EAAQM,SAASqB,KAAgB3B,EAAQM,SAASsB,IAGrG5B,EAAQ+B,SAASN,QAAQ,SAASlK,GAC9B,GAAIyK,GAASxR,OAAO+G,EAAOkD,EAAMuI,YAAY,EAC7C,IAAGhB,EAAOrN,UAAW,CACjB,GAAGjE,QAAQ6H,OAAOyH,EAAQiC,aAAc,CACpC,GAAIC,GAAgB1R,OAAOwP,EAAQiC,YACnCC,GAAc1M,KAAKwM,EAAOxM,QAC1B0M,EAAcqB,MAAMvB,EAAOuB,SAC3BrB,EAAczN,KAAKuN,EAAOvN,QAE1BuN,EAASE,EAEb,MAAOF,GAAOpP,SAEd,MAAO,QA4Bf6H,EAAM2H,WAAa,SAASC,GACxBU,EAAe/C,EAAQiC,aACtBvN,QAAS+F,EAAM/F,QACfE,QAAS6F,EAAM7F,QACfE,WAAY2F,EAAM3F,WAClB2I,YAAa4E,GACdc,GAEAzS,QAAQC,QAAQ0R,EAAGlQ,cAAc8K,eAAeqF,KAAK,SAASlQ,SAQlE+N,EAAarP,GAAG,mBAAoBiQ,GAEpCtG,EAAM1J,IAAI,WAAY,WAClBoP,EAAavP,IAAI,mBAAoBmQ,WAQzDjI,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAASqJ,EAAgBzO,GACtF,OACIsF,SAAU,IACVwF,QAAS,UACT3E,OACI/F,QAAW,OACXE,QAAW,OACXE,WAAc,iBACdkO,WAAc,cAElBxI,KAAM,SAASC,EAAO9J,EAAS+J,EAAOsF,EAASC,GAmB3C,QAASmC,GAAWC,GAChBU,EAAe/C,EAAQiC,aACtBvN,QAAS+F,EAAM/F,QACfE,QAAS6F,EAAM7F,QACfE,WAAY2F,EAAM3F,WAClB2I,YAAa4E,IACdrQ,KAAK,SAASnC,GACVmQ,EAAQS,cAAcjQ,OAAOX,GAAMqB,OAAOuJ,EAAMvJ,SAChD8O,EAAQc,YA1BhBrG,EAAMuI,WAAavI,EAAMuI,YAAc,aAEvChD,EAAQ0B,YAAYxQ,OAAS,SAASyQ,EAAYC,GAC9C,MAAOtJ,GAAgBsJ,EAAWnH,EAAMvJ,SAG5C8O,EAAQ0B,YAAYhN,QAAU,SAASiN,EAAYC,GAC/C,MAAOpJ,GAAiBoJ,EAAWnH,EAAMvJ,OAAQuJ,EAAM/F,UAG3DsL,EAAQ0B,YAAY9M,QAAU,SAAS+M,EAAYC,GAC/C,MAAOlJ,GAAiBkJ,EAAWnH,EAAMvJ,OAAQuJ,EAAM7F,UAG3DoL,EAAQ0B,YAAY7I,OAAS,SAAS8I,EAAYC,GAC9C,MAAOhJ,GAAgBgJ,EAAWnH,EAAMvJ,OAAQuJ,EAAM3F,aAe1DnE,EAAQG,GAAG,QAASsR,GAEpB3H,EAAM1J,IAAI,WAAY,WAClBJ,EAAQC,IAAI,QAASwR","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($rootScope, $scope, $mdDialog, time, autoSwitch, $mdMedia, mdPanelRef, $window) {\n\tvar self = this;\n\n    this._mdPanelRef = mdPanelRef;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n\n    this.onWindowResize = function() {\n        angular.element($window).off('resize', this.onWindowResize);\n        self.cancel();\n    };\n\n    angular.element($window).on('resize', this.onWindowResize);\n\n    $rootScope.$on('$stateChangeStart', function(){\n        self.cancel();\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function(){\n        self.cancel();\n    });\n    \n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n\n    this.cleanUpTrackedPanels = function(panelRef) {\n        if (panelRef._$mdPanel._trackedPanels.mdpTimePicker) {\n            delete panelRef._$mdPanel._trackedPanels.mdpTimePicker;\n        }\n    };\n    \n    this.cancel = function() {\n        var panelRef = this._mdPanelRef,\n            self = this;\n\n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){\n                console.log('Reference not found ' + e);\n            } finally {\n                panelRef.destroy();\n            }\n            \n        });\n    };\n\n    this.confirm = function() {\n        var time = self.time,\n            panelRef = self._mdPanelRef;\n        \n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\n                panelRef.config.locals.onClose(time.toDate());\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){ \n                console.log('No close function found.');\n            } finally {\n                \n                panelRef.destroy();    \n            }\n            \n        });\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdPanel\", function($mdPanel) {\n\n        var _mdPanel = $mdPanel,\n\n        timePicker = function(time, options, cb) {\n            var trackedPanels = $mdPanel._trackedPanels,\n                removePanel = function(){\n                   trackedPanels.mdpTimePicker.destroy();\n                    delete trackedPanels.mdpTimePicker;\n                    return;\n                },\n                openPanel = function(){\n                    _mdPanel.open(config);\n                },\n                sameInitiator = function(event1, event2) {\n                    var previousParent = event1.currentTarget.parentElement,\n                        currentParent = event2.currentTarget.parentElement;\n                    \n                    return previousParent == currentParent;\n                };\n\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var position = _mdPanel.newPanelPosition()\n                    .relativeTo(options.targetEvent.currentTarget)\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.BELOW)\n\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.ABOVE),\n\n                panelAnimation = $mdPanel.newPanelAnimation()\n                    .openFrom(options.targetEvent.currentTarget)\n                    .closeTo(options.targetEvent.currentTarget)\n                    .withAnimation($mdPanel.animation.SCALE),\n    \n                config = {\n                    id: 'mdpTimePicker',\n                    attachTo: angular.element(document.body),\n                    controller:  ['$rootScope', '$scope', '$mdPanel', 'time', 'autoSwitch', '$mdMedia', 'mdPanelRef', '$window', TimePickerCtrl],\n                    controllerAs: 'timepicker',\n                    template: '<md-card aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                                '<div layout-gt-xs=\"row\" layout-wrap>' +\n                                    '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                        '<div class=\"mdp-timepicker-selected-time\">' +\n                                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                        '</div>' +\n                                        '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                            '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                            '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                        '</div>' + \n                                    '</md-toolbar>' +\n                                    '<div>' +\n                                        '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n    \t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n    \t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                        '</div>' +\n                                        \n                                        '<md-dialog-actions layout=\"row\">' +\n    \t                                \t'<span flex></span>' +\n                                            '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                            '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                        '</md-dialog-actions>' +\n                                    '</div>' +\n                                '</div>' +\n                            '</md-card>',\n                    openFrom: options.targetEvent,\n                    position: position,\n                    animation: panelAnimation,\n                    locals: {\n                        time: time,\n                        autoSwitch: options.autoSwitch,\n                        onClose: cb\n                    },\n                    skipHide: true,\n                    clickOutsideToClose: false,\n                    escapeToClose: true,\n                    focusOnOpen: false,\n                    trapFocus: false,\n                    zIndex: 200\n                };\n\n            if (trackedPanels.mdpTimePicker) {\n                // we already have one open, check to see if user has clicked on same source as currently opened panel. If so, close, don't open new.\n                if (sameInitiator(trackedPanels.mdpTimePicker.config.openFrom, options.targetEvent)) {\n                    return trackedPanels.mdpTimePicker.close().then(removePanel);\n                }\n\n                // we already have one open, close it and open new.\n                return trackedPanels.mdpTimePicker.close().then(removePanel).then(openPanel);\n            }\n            \n\n            return openPanel();\n\n\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"h:mm A\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }, updateTime);\n\n                // TODO: add conditional for focusOpOpen flag.\n                angular.element(ev.currentTarget.parentElement).find('input').focus();\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"h:mm A\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n/* global moment, angular */\n\nfunction DatePickerCtrl($rootScope, $scope, $mdPanel, $mdMedia, $timeout, currentDate, options, mdPanelRef, $window) {\n    var self = this;\n\n    this._mdPanelRef = mdPanelRef;\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    this.onWindowResize = function() {\n        angular.element($window).off('resize', this.onWindowResize);\n        self.cancel();\n    };\n\n    angular.element($window).on('resize', this.onWindowResize);\n\n    $rootScope.$on('$stateChangeStart', function(){\n        self.cancel();\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function(){\n        self.cancel();\n    });\n    \n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cleanUpTrackedPanels = function(panelRef) {\n        if (panelRef._$mdPanel._trackedPanels.mdpDatePicker) {\n            delete panelRef._$mdPanel._trackedPanels.mdpDatePicker;\n        }\n    };\n\n    this.cancel = function() {\n        var panelRef = this._mdPanelRef,\n            self = this;\n\n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){\n                console.log('Reference not found ' + e);\n            } finally {\n                panelRef.destroy();\n            }\n            \n        });\n    };\n\n\n    this.confirm = function() {\n    \tvar date = self.date,\n            panelRef = self._mdPanelRef;\n            \n    \t\n    \tif (self.minDate && self.date.isBefore(self.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (self.maxDate && self.date.isAfter(self.maxDate)) {\n    \t\tdate = moment(self.maxDate);\n    \t}  \t\n    \t\n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus()\n                panelRef.config.locals.onClose(date.toDate());\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){ \n                console.log('No close function found.');\n            } finally {\n                \n                panelRef.destroy();    \n            }\n            \n        });\n\n\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n        \n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;    \n    };\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdPanel\", function($mdPanel) {\n        var _mdPanel = $mdPanel,\n\n        datePicker = function(currentDate, options, cb) {\n            var trackedPanels = $mdPanel._trackedPanels,\n                removePanel = function(){\n                   trackedPanels.mdpDatePicker.destroy();\n                    delete trackedPanels.mdpDatePicker;\n                    return;\n                },\n                openPanel = function(){\n                    _mdPanel.open(config);\n                },\n                sameInitiator = function(event1, event2) {\n                    var previousParent = event1.currentTarget.parentElement,\n                        currentParent = event2.currentTarget.parentElement;\n                    \n                    return previousParent == currentParent;\n                };\n\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {targetEvent: null};\n            \n            options.displayFormat = DISPLAY_FORMAT;\n\n            var position = _mdPanel.newPanelPosition()\n                    .relativeTo(options.targetEvent.currentTarget)\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.BELOW)\n\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.ABOVE),\n\n                panelAnimation = $mdPanel.newPanelAnimation()\n                    .openFrom(options.targetEvent.currentTarget)\n                    .closeTo(options.targetEvent.currentTarget)\n                    .withAnimation($mdPanel.animation.SCALE),\n\n                config = {\n                    id: 'mdpDatePicker',\n                    attachTo: angular.element(document.body),\n                    controller:  ['$rootScope', '$scope', '$mdPanel', '$mdMedia', '$timeout', 'currentDate', 'options','mdPanelRef', '$window', DatePickerCtrl],\n                    controllerAs: 'datepicker',\n                    template:   '<md-card class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' + \n                                    '<div layout=\"row\" layout-wrap>' + \n                                        '<div layout=\"column\" layout-align=\"start center\">' +\n                                            '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                                '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                                '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                            '</md-toolbar>' + \n                                        '</div>' +  \n                                        '<div>' + \n                                            '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                                '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                                    '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                        '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                                    '</div>' +\n                                                '</md-virtual-repeat-container>' +\n                                            '</div>' +\n                                            '<mdp-calendar ng-if=\"!datepicker.selectingYear\" double-click=\"datepicker.confirm\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                            '<md-dialog-actions layout=\"row\">' +\n                                                '<span flex></span>' +\n                                                '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                                '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                            '</md-dialog-actions>' +\n                                        '</div>' + \n                                    '</div>' +\n                                '</md-card>',\n                    openFrom: options.targetEvent,\n                    position: position,\n                    animation: panelAnimation,\n                    locals: {\n                        currentDate: currentDate,\n                        options: options,\n                        onClose: cb\n                    },\n                    clickOutsideToClose: false,\n                    escapeToClose: true,\n                    focusOnOpen: false,\n                    trapFocus: false,\n                    zIndex: 200\n                };\n\n            if (trackedPanels.mdpDatePicker) {\n                // we already have one open, check to see if user has clicked on same source as currently opened panel. If so, close, don't open new.\n                if (sameInitiator(trackedPanels.mdpDatePicker.config.openFrom, options.targetEvent)) {\n                    return trackedPanels.mdpDatePicker.close().then(removePanel);\n                }\n\n                // we already have one open, close it and open new.\n                return trackedPanels.mdpDatePicker.close().then(removePanel).then(openPanel);\n            }\n            \n\n            return openPanel();\n    \n        };\n\n        return datePicker;\n    \n    }];\n});\n    \n    \n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\t\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0, \n            this.dow\n        )\n    );\n    \n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n            \n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n            \n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.selectDateDblClick = function(dom) {\n        self.date.date(dom);\n        if (this.doubleClick){\n            this.doubleClick();\n            \n        }\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\",\n            \"doubleClick\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-dblclick=\"calendar.selectDateDblClick(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !minDate.isValid() || \n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !maxDate.isValid() || \n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n                \n    return !value || \n            angular.isDate(value) || \n            !angular.isFunction(filter) || \n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n                \n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                    \n                $transclude(function(clone) {\n                   inputContainer.append(clone); \n                });  \n                \n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                \n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                \n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n                \n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) \n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n                \n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n                \n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n                \n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n                \n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n                \n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n                \n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n                            \n                            parsed = originalModel;\n                        }\n                        return parsed.toDate(); \n                    } else\n                        return null;\n                });\n                \n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n                \n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n    \n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n                    \n                    if(!ngModel.$pristine && \n                        messages.hasClass(\"md-auto-hide\") && \n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n    \n                    ngModel.$render();\n                }\n                    \n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }, updateDate);\n\n                    angular.element(ev.currentTarget.parentElement).find('input').focus();\n                };\n                \n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n                \n                inputElement.on(\"reset input blur\", onInputElementEvents);\n                \n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n            \n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n            \n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n            \n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n            \n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate, \n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n})();"]}